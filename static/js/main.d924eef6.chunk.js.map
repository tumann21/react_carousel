{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemWidth","step","frameSize","animationDuration","index","infinite","handleNextButton","newIndex","props","images","length","setState","handlePrevButton","handleInputChange","event","e","this","className","style","color","type","min","max","name","value","onChange","target","htmlFor","id","checked","width","transform","transition","map","image","src","alt","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d924eef6.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  itemWidth: number,\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  index: number,\n  infinite: boolean,\n  [key: string]: number | boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    itemWidth: 130,\n    step: 3,\n    frameSize: 3,\n    animationDuration: 1000,\n    index: 0,\n    infinite: false,\n  };\n\n  handleNextButton = () => {\n    const {\n      index,\n      frameSize,\n      step,\n      infinite,\n    } = this.state;\n    let newIndex: number;\n\n    if (infinite) {\n      if (index + frameSize === this.props.images.length) {\n        newIndex = 0;\n      } else if (index + frameSize > this.props.images.length - step) {\n        newIndex = this.props.images.length - frameSize;\n      } else {\n        newIndex = index + step;\n      }\n\n      this.setState(() => ({ index: newIndex }));\n    } else {\n      if (index + frameSize > this.props.images.length - step) {\n        newIndex = this.props.images.length - frameSize;\n      } else {\n        newIndex = index + step;\n      }\n\n      this.setState(() => ({ index: newIndex }));\n    }\n  };\n\n  handlePrevButton = () => {\n    const { index, step, infinite } = this.state;\n    let newIndex: number;\n\n    if (infinite) {\n      if (index === 0) {\n        newIndex = this.props.images.length - step - 1;\n      } else if (index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({ index: newIndex }));\n    } else {\n      if (index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({ index: newIndex }));\n    }\n  };\n\n  handleInputChange = (event: string, e: number | boolean) => {\n    this.setState(() => ({ [event]: e }));\n  };\n\n  render() {\n    const {\n      itemWidth, frameSize, step, animationDuration, index,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"selector-section\">\n          <span style={{ color: 'red' }}>Image Width</span>\n          <div className=\"input-block\">\n            <input\n              type=\"range\"\n              min=\"50\"\n              max=\"390\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              onChange={(e) => {\n                this.handleInputChange(e.target.name, +e.target.value);\n              }}\n            />\n            <span>{itemWidth}</span>\n          </div>\n          <span>Image number</span>\n          <div className=\"input-block\">\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              name=\"frameSize\"\n              value={frameSize}\n              onChange={(e) => {\n                this.handleInputChange(e.target.name, +e.target.value);\n              }}\n            />\n            <span>{frameSize}</span>\n          </div>\n          <span>Step</span>\n          <div className=\"input-block\">\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              name=\"step\"\n              value={step}\n              onChange={(e) => {\n                this.handleInputChange(e.target.name, +e.target.value);\n              }}\n            />\n            <span>{step}</span>\n          </div>\n          <span>Animation Duration</span>\n          <div className=\"input-block\">\n            <input\n              type=\"range\"\n              min=\"100\"\n              max=\"4000\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={(e) => {\n                this.handleInputChange(e.target.name, +e.target.value);\n              }}\n            />\n            <span>{animationDuration}</span>\n          </div>\n          <div className=\"input-block\">\n            <label htmlFor=\"checkInfinity\">\n              <input\n                id=\"checkInfinity\"\n                type=\"checkbox\"\n                name=\"infinite\"\n                onChange={(e) => {\n                  this.handleInputChange(e.target.name, e.target.checked);\n                }}\n              />\n              Infinity\n            </label>\n          </div>\n        </div>\n        <div className=\"Carousel\">\n          <div\n            className=\"Carousel__wrapper\"\n            style={{\n              width: itemWidth * frameSize,\n            }}\n          >\n            <div\n              id=\"list\"\n              className=\"Carousel__list\"\n              style={{\n                transform: `translateX(-${index * itemWidth}px)`,\n                transition: `${animationDuration}ms ease-in-out`,\n              }}\n            >\n              {this.props.images.map((image) => (\n                <div\n                  key={image}\n                >\n                  <img\n                    src={image}\n                    alt={image}\n                    style={{\n                      width: itemWidth,\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"Carousel__button-section\">\n            <button\n              className=\"buttons\"\n              type=\"button\"\n              onClick={this.handlePrevButton}\n            >\n              Prev\n            </button>\n            <button\n              className=\"buttons\"\n              type=\"button\"\n              onClick={this.handleNextButton}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Carousel with\n          {images.length}\n          images\n        </h1>\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}